[tool.poetry]
name = "mainnet_launch"
version = "0.1.0"
description = ""
authors = ["parkerburchett <parkerburchett@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
web3 = "^5.28.0"
jupyter = "^1.0.0"
matplotlib = "^3.9.1"
pandas = "^2.2.2"
plotly = "^5.23.0"
multicall = "0.8.2"
fastparquet = "^2024.5.0"
python-dotenv = "^1.0.1"
streamlit = "1.38.0"
boto3 = "^1.35.29"
psutil = "^6.0.0"
sqlalchemy = "^2.0.40"
asyncpg = "^0.30.0"
greenlet = "^3.2.0"
psycopg2-binary = "^2.9.10"
sqlalchemy-schemadisplay = "^2.0"
graphviz = "^0.20.3"
statsmodels = "^0.14.4"
tdqm = "^0.0.1"
aiolimiter = "^1.2.1"
line-profiler = "^5.0.0"
tabulate = "^0.9.0"
slack-sdk = "^3.37.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
black = {extras = ["jupyter"], version = "^24.8.0"}
pytest-xdist = "^3.8.0"

[tool.black]
line-length = 120

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]

# Quickly update the production database, use threads to go faster, note note used because of rate limiting, just use the slow one ~ 6 minutes for slow
update-prod-db = "mainnet_launch.database.schema.ensure_tables_are_current.ensure_all_tables_are_current:main"

# update the produciton database, one function at a time
slow-update-prod-db = "mainnet_launch.database.schema.ensure_tables_are_current.ensure_all_tables_are_current:sequential_main"

# fetch all the exit liqudity quotes at based on what assets we hold
fetch-exit-liqudity-quotes = "mainnet_launch.database.schema.ensure_tables_are_current.using_3rd_party.fetch_current_exit_liqudity_from_quotes:fetch_and_save_one_batch"

app = "mainnet_launch.app.cli:app"
marketing-app = "mainnet_launch.app.cli:marketing_app"
export-config = "mainnet_launch.app.export_config:create_streamlit_secrets_from_env"


# slack notifications
slack-alert = "mainnet_launch.slack_messages.alerts:post_github_action_status"


# Slack informational
post-slack-informational-messages = "mainnet_launch.slack_messages.send_informational_messages:send_information_slack_messages"


[tool.pytest.ini_options]
addopts = "-n auto --durations=0 -m 'not marketing'"
testpaths = ["tests"]
markers = [
  "marketing: the slower marketing pages, don't change often"
]