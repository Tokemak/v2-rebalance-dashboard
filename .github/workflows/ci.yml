name: Don't Break Production

on:
  pull_request:
    branches: [main]
    types: [opened]       # ← only when the PR is first opened
  workflow_dispatch:       # ← manual "Run workflow" button

concurrency:
  group: pr-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  run-script:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      DOTENV_BLOB: ${{ secrets.CI_DOT_ENV_FILE }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true   # .venv in repo root

      # Single cache for the venv + Poetry downloads
      - uses: actions/cache@v4
        with:
          path: |
            ./.venv
            ~/.cache/pypoetry
          key: poetry-3.10-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-3.10-${{ runner.os }}-

      - name: Create .env file from github secret
        shell: bash
        run: |
          umask 177
          printf '%s' "$DOTENV_BLOB" > .env

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi
        
      - name: poetry run linter
        run: poetry run black --diff --check .

      - name: poetry run pytest
        run: poetry run pytest




# name: CI

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# jobs:
#   black:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-python@v5
#         with:
#           python-version: "3.10"
#           cache: "pip"
#       - run: python -m pip install --upgrade pip && pip install "black==24.8.0"
#       - run: black --diff --check .



# # jobs:
# #   black:
# #     runs-on: ubuntu-latest
# #     steps:
# #       - uses: actions/checkout@v4

# #       - uses: actions/setup-python@v5
# #         with:
# #           python-version: '3.10'

# #       - name: Install Poetry
# #         uses: snok/install-poetry@v1
# #         with:
# #           version: 1.8.3

# #       - name: Configure Poetry
# #         run: poetry config virtualenvs.in-project true

# #       - name: Cache Poetry and pip
# #         uses: actions/cache@v4
# #         with:
# #           path: |
# #             ~/.cache/pypoetry
# #             ~/.cache/pip
# #             ./.venv
# #           key: ${{ runner.os }}-py${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
# #           restore-keys: |
# #             ${{ runner.os }}-py${{ steps.setup-python.outputs.python-version }}-

# #       - name: Install Dev Dependencies
# #         run: |
# #           poetry install --only dev --no-interaction --no-ansi --no-root
# #       - name: Run Black
# #         run: |
# #           poetry run black --diff --check .
