name: Update Production Database

on:
  schedule:
    # Daily at 3am UTC (eg 7pm or 8pm PST)
    - cron: "0 3 * * *"
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      DOTENV_BLOB: ${{ secrets.CI_DOT_ENV_FILE }}
      WHICH_DATABASE: MAIN_DATABASE_URL
      WHICH_ALCHEMY_URL: AUTOPOOL_DASHBOARD_CI_ALCHEMY_URL

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true 

      - uses: actions/cache@v4
        with:
          path: |
            ./.venv
            ~/.cache/pypoetry
          key: poetry-3.10-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-3.10-${{ runner.os }}-

      - name: Create .env file from github secret blob and set WHICH_DATABASE
        shell: bash
        run: |
          umask 177
          printf '%s\n' "$DOTENV_BLOB" > .env

          for VAR in WHICH_DATABASE WHICH_ALCHEMY_URL; do
            if grep -q "^${VAR}=" .env; then
              echo "Error: ${VAR} should not be included in DOTENV_BLOB. Set it via the workflow env instead." >&2
              exit 1
            fi
            echo "${VAR}=${!VAR}" >> .env
          done

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: poetry run update-prod-db
        run: poetry run slow-update-prod-db 

      - name: poetry run pytest
        run: poetry run pytest

